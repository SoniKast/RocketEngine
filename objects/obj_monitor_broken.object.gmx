<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ctr_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

 // Icon:
    icon_position         = 0;
    icon_move_length      = 45;
    icon_disappear_length = 30;
    icon_rewarded         = -1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Icon movement.

 // Moving up:
    if(icon_move_length)
    {
       icon_position    -= 1;
       icon_move_length -= 1;
    }
    else
 // Stop moving.
    if(icon_move_length == 0 &amp;&amp; icon_disappear_length)
    {
       icon_disappear_length -= 1;
    }
 
 // Give rewards:
    if(icon_move_length == 0 &amp;&amp; icon_rewarded == -1)
    {
       icon_rewarded = 1;
       event_user(0);
    } 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rewards.

 // Rings: (+10 Rings)
    switch(icon_frame)
    {
        // 5 Rings
        case 0:
        {
           global.crings += 5;         
           if(bv_audio_is_playing(_general_ring))
           {
                bv_audio_stop(_general_ring); 
           }   
           bv_audio_play(_general_ring, global.sfx_volume);  
           break;
        }
        // 10 Rings
        case 1:
        {
           global.crings += 10;
           if(bv_audio_is_playing(_general_ring))
           {
                bv_audio_stop(_general_ring); 
           }   
           bv_audio_play(_general_ring, global.sfx_volume);  
           break;
        }
        // Random Ring
        case 2:
        {
            global.crings += floor(random(51));
            if(bv_audio_is_playing(_general_ring))
            {
                 bv_audio_stop(_general_ring); 
            }   
            bv_audio_play(_general_ring, global.sfx_volume);  
            break;
        }
        // Shield
        case 3:
        {
           if(parent.shield_index != 0)
           {
              with(par_shield) instance_destroy();
              parent.shield_index  = 0; 
              parent.shield_object = noone;
           }
           parent.shield_index = SHIELD_NORMAL;
           with(instance_create(0, 0, obj_shield_normal))
           {
                parent              = other.parent;
                parent.shield_object = id;
           }
           if(bv_audio_is_playing(_shield_get_basic))
           {
                bv_audio_stop(_shield_get_basic); 
           }   
           bv_audio_play(_shield_get_basic, global.sfx_volume);  
            break;
        }
        // Electric Shield
        case 4:
        {
           if(parent.shield_index != 0)
           {
              with(par_shield) instance_destroy();
              parent.shield_index  = 0; 
              parent.shield_object = noone; 
           }
           parent.shield_index = SHIELD_LIGHTNING;
           with(instance_create(0, 0, obj_shield_lightning))
           {
                parent              = other.parent;
                parent.shield_object = id;
           }
           if(bv_audio_is_playing(_shield_get_lightning))
           {
                bv_audio_stop(_shield_get_lightning); 
           }   
           bv_audio_play(_shield_get_lightning, global.sfx_volume);  
            break;
        }
        // Invincibility
        case 5:
        {
            parent.invincibility       = 2;
            parent.invincibility_timer = 1200;
            if(parent.shield_index != 0)
            {
                with(par_shield) instance_destroy();
                parent.shield_index  = 0; 
                parent.shield_object = noone; 
            }
            with(instance_create(0, 0, obj_shield_inv))
            {
                parent               = other.parent;
                parent.shield_object = id;
            }
            if(global.ev_volume != 0.0)
            {       
               if(bv_audio_is_playing(_ev_invincibility))
               {
                  bv_audio_stop(_ev_invincibility);
               }  
               bv_audio_loop(_ev_invincibility, global.ev_volume);
            }
            break;
        }
        // Speed Sneakers
        case 6:
        {
            parent.speedshoe_state = 1;
            parent.speedshoe_timer = 1200;
            if(global.ev_volume != 0.0)
            {
               if(bv_audio_is_playing(_ev_sneakers))
               {
                  bv_audio_stop(_ev_sneakers);
               }  
               bv_audio_loop(_ev_sneakers, global.ev_volume);    
            }
            break;
        }
        // Life
        case 7:
        case 8: 
        case 9:
        case 10:
        case 11:
        {
            global.clives += 1;
            if(global.ev_volume != 0.0)
            {       
               if(bv_audio_is_playing(_ev_life))
               {
                    bv_audio_stop(_ev_life); 
               }   
               bv_audio_play(_ev_life, global.ev_volume);  
            }
            break;
        }
    };
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Broken Monitor.

 // Draw Icon:
    if(icon_disappear_length){
       draw_sprite_ext(spr_monitor_icon, icon_frame, x, yy+icon_position, 1, 1, 0, c_white, 1)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
