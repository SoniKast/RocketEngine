<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9000004</depth>
  <persistent>0</persistent>
  <parentName>ctr_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

    // Stripe Position.
       side_x = -sprite_get_width(spr_title_card_side); // Title cards X Position.
       side_y = 0; //Title cards y Position. 
       
    // Banner Position.
       name_x = 0; // Banner's X Position.
       name_y = -sprite_get_height(spr_title_card_name); // Banner's Y Position.
       
    // Zone text.
       zone_x        = 240; // Horizontal Position of the Zone Text
       zone_y        = 126; // Vertical Position of the Zone Text
       zone_jp_x     = 481; // Horizontal Position of the Japanese Zone Text
       zone_jp_y     = 114; // Vertical Position of the Japanese Zone Text
       act_x         = 180; // Horizontal Position of the Act Text
       act_y         = 160+sprite_get_height(spr_title_card_act); // Vertical Position of the Act Text
       zone_scroll   = false;
       
    // Title Card State and misc. variables.
       title_state          = 1;    // State of the title card.
       title_delay          = 16;   // Delays the title card drawing.
       title_kill_delay     = 45; // How many frames it takes to kill the title card.
       title_advance_delay  = 80;   // How many frames it takes to make the title card disappear.
       title_backdrop_alpha = 1;    // Alpha of the black backdrop.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change state.
    
    title_state = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Title card.
 
    if(title_delay &gt; 0)
    {
       title_delay -= 1;
    }
    else 
    {
       // Appear.
       if(title_state == 1)
       {
          if(side_x != 0)
          {
             side_x = approach(side_x, 0, 8);
          }
          if(side_x == 0)
          {
             if(name_y != 0)
             {
                zone_x    = approach(zone_x, 0, 10);
                zone_jp_x = approach(zone_jp_x, 240, 14);
             }
          } 
          if(zone_x == 0)
          {
            name_y      = approach(name_y, 0, 10);
            act_y       = approach(act_y, 144, 10);
            zone_scroll = true;
          }
          
            
          if(zone_scroll == true &amp;&amp; zone_x &gt; 0-sprite_get_width(spr_title_card_zone)*1.6)
          {
             zone_x -= 3;
              // Fade from black
              if(title_backdrop_alpha != -2)
              {
                    title_backdrop_alpha -= 0.01;
              }
          }
          else if(zone_scroll == true &amp;&amp; zone_x &lt;= 0-sprite_get_width(spr_title_card_zone)*1.6) 
          {
                  title_state = 2;
          }
       }
       // Disappear.
       if(title_state == 2)
       {
          name_y     = approach(name_y, -sprite_get_height(spr_title_card_name), 20);
          side_x     = approach(side_x, -sprite_get_width(spr_title_card_side), 20);
          zone_x     = approach(zone_x, view_xview-1000, 20);
          zone_jp_x  = approach(zone_jp_x, view_xview-1000, 20);
          act_y      = approach(act_y, 160+sprite_get_height(spr_title_card_act), 6);
          
          // Kill.
          if(title_kill_delay &gt; 0)
          {
             title_kill_delay -= 1;
          }
          else
          {
          // Unlock character control.
            if(instance_exists(par_character))
            {
                with(par_character)
                {
                    cant_move = false;
                }
                global.display_hud = true;
                instance_destroy();
            }
            if(title_state == 2)
            {
                global.do_time = 1;
            }
          }
       }       
    }
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw elements.
    draw_set_color(c_black);
    draw_set_alpha(title_backdrop_alpha);
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false);
    draw_set_alpha(1);
    draw_set_color(c_white);
  
 // Side
    draw_sprite(spr_title_card_side, global.character_index, view_xview+side_x, view_yview+side_y);
    
 // Name
    draw_sprite(spr_title_card_name, global.character_index, view_xview+name_x, view_yview+name_y);

 // Zone Name (English)
    for(i=0; i&lt;3; i+=1)
    {
        draw_sprite(spr_title_card_zone, stg.zone_id, view_xview+zone_x+(i*sprite_get_width(spr_title_card_zone)), view_yview+zone_y);
    }
    
 // Zone Name (Japanese)
    draw_sprite(spr_title_card_zone_jp, stg.zone_id, view_xview+zone_jp_x, view_yview+zone_jp_y);

 // Act
    draw_sprite(spr_title_card_act, stg.zone_act-1, view_xview+act_x, view_yview+act_y);
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
