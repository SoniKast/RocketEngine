<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goalpost</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ctr_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup variables
goal_activated = 0;
image_speed    = 0;
goal_duration  = 60;
goal_timer     = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate the goal post
    if(instance_exists(par_character))
    {
        near_player = instance_nearest(x, y, par_character);
        if(near_player != noone &amp;&amp; near_player.x &gt; x)
        {
            if(goal_activated == false)
            {
                // Activate the goal post, play the sound, set the image speed
                goal_activated = true;
                bv_audio_play(_general_sign_post, global.sfx_volume);
                image_speed = 0.25;
                
                // Disable timer.
                global.do_time = 0;       
                
                // Reset checkpoint.
                global.checkpoint_x = -1;
                global.checkpoint_y = -1;
                global.checkpoint_t =  0;
                
                // Palette changing
                with(near_player)
                {
                    allow_transformation = 0;
                    if(player_state != PLAYER_NORMAL)
                    {
                        alarm[1] = -1;
                        player_state = PLAYER_NORMAL;
                        animation_index = "BLANK";
                        transform_timer = 15;
                        animation_index = "BLANK AGAIN";
                        if(character_id = CHAR_SONIC)
                        {
                            transform_ended = 1;
                        }
                    }    
                    cant_move = true;
                }
                
                // Fade
                fadeout_flag = true;
            }
        }
    }
    
    if(goal_activated == true)
    {   
        with(ctr_camera)
        {
            cam_y_shift = approach(cam_y_shift, -48, 6);
        }
        with(near_player)
        {
            x_speed = 5.5;
        }
        if(goal_duration != 0)
        {
            if(goal_timer != 0)
            {
                goal_timer -= 1;
            }
            else
            {
                goal_timer = 2;
            }
        }
        else
        {
            with(near_player)
            {
                state = CS_GOAL;
            }
            // Create the results object
            if(instance_exists(obj_results) == false)
            {
                instance_create(x, y, obj_results);
            }
        }
        goal_duration -= 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Trigger.

    if(goal_activated == false)
    {
        // Activate the goal post, play the sound, set the image speed
        goal_activated = true;
        bv_audio_play(_general_sign_post, global.sfx_volume);
        image_speed = 0.25;
        
        // Disable timer.
        global.do_time = 0;       
        
        // Reset checkpoint.
        global.checkpoint_x = -1;
        global.checkpoint_y = -1;
        global.checkpoint_t =  0;
        
        // Fade
        fadeout_flag = true;
        
        // Change palette
        with(near_player)
        {
            allow_transformation = 0;
            if(player_state != PLAYER_NORMAL)
            {
                alarm[1] = -1;
                player_state = PLAYER_NORMAL;
                animation_index = "BLANK";
                transform_timer = 15;
                animation_index = "BLANK AGAIN";
                if(character_id = CHAR_SONIC)
                {
                    transform_ended = 1;
                }
            }
            cant_move = true;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
